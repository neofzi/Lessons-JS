//!–ó–∞–¥–∞—á–∞ ‚Ññ3
//!–ú–æ—Ä—Å—å–∫–∏–π –±—ñ–π. –í–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏–Ω–æ–º –Ω–∞ –¥–≤–æ–≤–∏–º—ñ—Ä–Ω–æ–º—É –ø–æ–ª—ñ —Ä–æ–∑–º—ñ—Ä–æ–º 6*6 —Ä–æ–∑—Ç–∞—à–æ–≤—É—î—Ç—å—Å—è 5 –∫–æ—Ä–∞–±–ª—ñ–≤. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç—Ä—ñ–ª—è—î –≤–∫–∞–∑—É—é—á–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏. –ì—Ä–∞ –ø—Ä–æ–¥–æ–≤–∂—É—î—Ç—å—Å—è –ø–æ–∫–∏ –Ω–µ –ø–æ—Ç–æ–ø–ª–µ–Ω–æ —É—Å—ñ –∫–æ—Ä–∞–±–ª—ñ –∞–±–æ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–∞–∫—ñ–Ω—á–∞—Ç—å—Å—è —Å–Ω–∞—Ä—è–¥–∏.
function getTable(rowNumbers, columnNumbers) {
  let table = [];
  for (let i = 0; i < rowNumbers; i++) {
    let row = Array(columnNumbers).fill(0);
    table.push(row);
  }
  return table;
}
let rowSum = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å —à–∏—Ä–∏–Ω—É –ø–æ–ª—è (–≤ —á–∏—Å–ª–∞—Ö)"));
let columnSum = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å –≤–∏—Å–æ—Ç—É –ø–æ–ª—è (–≤ —á–∏—Å–ª–∞—Ö)"));
let table = getTable(rowSum, columnSum);

function placeShips(table, numberOfShips) {
  let shipsPlaced = 0;
  while (shipsPlaced < numberOfShips) {
    let randomRow = Math.floor(Math.random() * table.length);
    let randomColumn = Math.floor(Math.random() * table[0].length);
    if (table[randomRow][randomColumn] === 0) {
      table[randomRow][randomColumn] = "‚õµÔ∏è";
      shipsPlaced++;
    }
  }
  return table;
}
let numberOfShips = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∞–±–ª—ñ–≤"));
console.log(placeShips(table, numberOfShips));

function getTableString(table) {
  return table
    .map((row) => row.map((cell) => (cell === "‚õµÔ∏è" ? 0 : cell)).join(", "))
    .join("\n");
}

function getUserShot(table) {
  let userColumn, userRow;
  let numberOfShots = parseInt(prompt("–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–Ω–∞—Ä—è–¥—ñ–≤"));
  do {
    userRow = parseInt(
      prompt(
        "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ä—è–¥–∫–∞ –¥–ª—è –≤–∏—Å—Ç—Ä—ñ–ª—É (–≤—ñ–¥ 0 –¥–æ " + (table.length - 1) + ")"
      )
    );
    userColumn = parseInt(
      prompt(
        "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Å—Ç–æ–≤–ø—Ü—è –¥–ª—è –≤–∏—Å—Ç—Ä—ñ–ª—É (–≤—ñ–¥ 0 –¥–æ " +
          (table[0].length - 1) +
          ")"
      )
    );
    if (table[userRow][userColumn] === "‚õµÔ∏è") {
      table[userRow][userColumn] = "üî•";
      alert(`–í–∏ –≤–ª—É—á–∏–ª–∏ –≤ –∫–æ—Ä–∞–±–µ–ª—å!\n${getTableString(table)}`);
      numberOfShots--;
    } else {
      table[userRow][userColumn] = "‚ùå";
      alert(`–í–∏ –Ω–µ –≤–ª—É—á–∏–ª–∏ :(\n${getTableString(table)}`);
      numberOfShots--;
    }
  } while (numberOfShots > 0 && table.flat().includes("‚õµÔ∏è"));
  return table;
}
document.write(`–ö—ñ–Ω–µ—Ü—å –≥—Ä–∏!<br>${getUserShot(table)}`);
